---
- name: Ping Servers
  hosts: service_with_postrges
  tasks:
    - name: Ping servers
      ping:

- name: GIT
  hosts: service_with_postrges
  tasks:
    - name: "Git clone repo"
      git:
        repo: https://github.com/JackSpades17/service_with_postgres
        dest: "/home/{{ ansible_user }}/service_with_postgres"
        clone: yes
        update: yes

# - name: Install Docker
#   hosts: service_with_postrges
#   tasks:
#     - name: update and upgrade apt
#       apt:
#         upgrade: yes
#         update_cache: yes

#     - name: "Check/Install docker"
#       apt: 
#         name: "docker.io"
#         state: present
#         update_cache: true

#     - name: "Check/Install docker-compose"
#       apt: 
#         name: "docker-compose"
#         state: present
#         update_cache: true

#     - name: "Start docker service"
#       service:
#         name: "docker"
#         state: started

#     - name: "Change Role User For Docker"
#       user:
#         name: "{{ ansible_user }}"
#         groups: docker
#         append: yes
#   become: true

# - name: Restart Server
#   hosts: service_with_postrges
#   tasks:
#     - name: Restart Server
#       reboot:
#         reboot_timeout: 120
#         msg: "Rebooting machines"
#   become: true

# - name: Download Postgre
#   hosts: service_with_postrges
#   tasks:
#     - name: "Download Postgre N1"
#       shell: 
#         cmd: "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -"

#     - name: "Download Postgre N2"
#       shell: 
#         cmd: sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'

#     - name: "Check/Install postgresql"
#       apt: 
#         name: "postgresql"
#         state: present
#         update_cache: true
#       become: true

#     - name: "Check/Install postgresql-contrib"
#       apt: 
#         name: "postgresql-contrib"
#         state: present
#         update_cache: true
#       become: true

- name: Rebuilding Postgre DB
  hosts: service_with_postrges
  tasks:
    - name: "Copy Backup File"
      copy: 
        src: /var/lib/jenkins/backup
        dest: /var/lib/postgresql/backup
        owner: postgres
        group: postgres
        mode: '0744'
      become: true

    - name: "Grant User For Backup"
      postgresql_pg_hba:
        dest: /etc/postgresql/17/main/pg_hba.conf
        contype: local
        users: postgres
        databases: all
        method: trust
      become: true

    - name: "Restart PSQL service"
      service:
        name: "postgresql"
        state: restarted
      become: true

    - name: "PSQL Up DB"
      become_user: postgres
      postgresql_db:
        name: postgres
        state: restore
        target:  /var/lib/postgresql/backup
    
    - name: "Grant User For Backup"
      postgresql_pg_hba:
        dest: /etc/postgresql/17/main/pg_hba.conf
        contype: local
        users: postgres
        databases: all
        method: peer
      become: true

    - name: "Grant Test User"
      postgresql_pg_hba:
        dest: /etc/postgresql/17/main/pg_hba.conf
        contype: host
        users: test_user
        source: 0.0.0.0/0
        databases: postgres
        method: scram-sha-256
      become: true
    
    - name: "Listen Addresses PSQL For App"
      postgresql_set:
        name: listen_addresses
        value: '*'
      become: true

    - name: "Restart PSQL service"
      service:
        name: "postgresql"
        state: restarted
      become: true

- name: Build app
  hosts: service_with_postrges
  tasks:
    - name: "Docker Build And Start App"
      shell: 
        cmd: "docker-compose up -d"
        chdir: "{{ path_service }}"